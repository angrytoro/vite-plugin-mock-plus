{
  "compilerOptions": {
    /* ----- Project Options ----- */
    "target": "ES2022", // 目标代码为 ES2022，Vite 和现代 Node.js 环境都支持
    "module": "ESNext", // 使用最新的 Node.js ES Module 解析策略，与 "type": "module" 配合
    "moduleResolution": "bundler", // 同样，使用现代 Node.js 模块解析
    "lib": ["ESNext", "DOM"], // 包含最新的 ES 特性库和 DOM 库（某些 Node API 如 EventSource 会用到）

    /* ----- Output ----- */
    "outDir": "./dist", // 编译后的 JS 文件输出目录
    "declaration": true, // 生成 .d.ts 类型声明文件，供插件使用者使用
    "declarationMap": true, // 为 .d.ts 文件生成 source map
    "sourceMap": true, // 生成 .js.map source map 文件，方便调试
    "rootDir": "./src", // 指定源码根目录，编译后会保持 src 下的目录结构

    /* ----- Strict Checks ----- */
    "strict": true, // 启用所有严格类型检查选项
    "noImplicitAny": true, // 不允许隐式的 'any' 类型
    "strictNullChecks": true, // 严格的 null 检查
    "noUnusedLocals": true, // 报告未使用的局部变量
    "noUnusedParameters": true, // 报告未使用的参数

    /* ----- Module Interop ----- */
    "esModuleInterop": true, // 允许 'import' CommonJS 模块
    "forceConsistentCasingInFileNames": true, // 强制文件名大小写一致
    "resolveJsonModule": true, // 允许导入 .json 文件
    "skipLibCheck": true, // 跳过对 .d.ts 声明文件的类型检查，加快编译速度
    "isolatedModules": true // 确保每个文件都可以被安全地独立编译
  },
  "include": [
    "src/**/*" // 只编译 src 目录下的文件
  ],
  "exclude": [
    "node_modules", // 排除 node_modules
    "dist", // 排除输出目录
    "tests", // 排除测试文件，它们由 Vitest 单独处理
    "vitest.config.ts" // 排除 Vitest 配置文件
  ]
}
